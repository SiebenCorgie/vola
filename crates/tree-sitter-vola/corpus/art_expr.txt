==================
art def
==================

alge my_expr(){
    let a = 5 + 4 * 10.0;
    a
}

---

(source_file
  (alge_definition
    (identifier)
    (parameter_list)
    (scoped_expr
       (let_stmt
         (typed_identifier
           (identifier))
        (binary_expr
          (float
            (digit))
          (binary_expr
            (float
              (digit))
            (float
              (digit)
              (digit)))))
      (identifier))))

==================
art let
==================

op test<p>(){
    let a = x;
    p
}

---

(source_file
  (op_definition
    (identifier)
    (prim_list
      (identifier))
    (parameter_list)
    (block
      (let_stmt
        (typed_identifier
          (identifier))
        (identifier))
      (prim_expr
        (identifier)))))


==================
art calc
==================

op test<p>(){
    let a = 5 + x;
    p
}

---

(source_file
  (op_definition
    (identifier)
    (prim_list
      (identifier))
    (parameter_list)
    (block
      (let_stmt
        (typed_identifier
          (identifier))
        (binary_expr
          (float
            (digit))
          (identifier)))
      (prim_expr
        (identifier)))))

==================
art call
==================

op test<p>(){
    let a = some_function();
    p
}

---

(source_file
  (op_definition
    (identifier)
    (prim_list
      (identifier))
    (parameter_list)
    (block
      (let_stmt
        (typed_identifier
          (identifier))
        (call_expr
         (identifier)))
      (prim_expr
        (identifier)))))

==================
nested_call
==================

op test<p>(){
    let a = min(max(a, b), c);
    p
}

---

(source_file
  (op_definition
    (identifier)
    (prim_list
      (identifier))
    (parameter_list)
    (block
      (let_stmt
        (typed_identifier
          (identifier))
        (call_expr
         (identifier)
         (call_expr
           (identifier)
           (identifier)
           (identifier))
         (identifier)))
      (prim_expr
        (identifier)))))


==================
simple list
==================

op test<p>(){
    let a = [1.0, 2.0, 3.0];
    p
}

---

(source_file
      (op_definition
        (identifier)
        (prim_list
          (identifier))
        (parameter_list)
        (block
          (let_stmt
            (typed_identifier
              (identifier))
            (list
              (float
                (digit)
                (digit))
              (float
                (digit)
                (digit))
              (float
                (digit)
                (digit))))
          (prim_expr
            (identifier)))))

==================
mixed list
==================

op test<p>(){
    let a = [1.0, x, 3.0, y];
    p
}

---

(source_file
      (op_definition
        (identifier)
        (prim_list
          (identifier))
        (parameter_list)
        (block
          (let_stmt
            (typed_identifier
              (identifier))
            (list
              (float
                (digit)
                (digit))
              (identifier)
              (float
                (digit)
                (digit))
              (identifier)))
          (prim_expr
            (identifier)))))

==================
subexpr list
==================

op test<p>(){
    let a = [1.0, x + z, 3.0, y];
    p
}

---

(source_file
      (op_definition
        (identifier)
        (prim_list
          (identifier))
        (parameter_list)
        (block
          (let_stmt
            (typed_identifier
              (identifier))
            (list
              (float
                (digit)
                (digit))
              (binary_expr
                (identifier)
                (identifier))
              (float
                (digit)
                (digit))
              (identifier)))
          (prim_expr
            (identifier)))))

==================
subexpr-subscoped list
==================

op test<p>(){
    let a = [
        1.0,
        {
            let thingy = x + z;
            let other_thingy = 10.0;
            thingy * other_thingy - 5.0
        },
        3.0,
        y
    ];
    p
}

---

(source_file
      (op_definition
        (identifier)
        (prim_list
          (identifier))
        (parameter_list)
        (block
          (let_stmt
            (typed_identifier
              (identifier))
            (list
              (float
                (digit)
                (digit))
              (scoped_expr
                (let_stmt
                  (typed_identifier
                    (identifier))
                  (binary_expr
                    (identifier)
                    (identifier)))
                (let_stmt
                  (typed_identifier
                    (identifier))
                  (float
                    (digit)
                    (digit)))
                (binary_expr
                  (binary_expr
                    (identifier)
                    (identifier))
                  (float
                    (digit)
                    (digit))))
              (float
                (digit)
                (digit))
              (identifier)))
          (prim_expr
            (identifier)))))
