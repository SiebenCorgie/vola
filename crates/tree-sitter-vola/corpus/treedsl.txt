==================
simple_tree
==================

field testfield(a: vec3, b: s){
    union(){
        sphere(b)
    }{
        box(a)
    }
}

---
(source_file
      (field_decl
        (identifier)
        (typed_arg
          (identifier)
          (alge_type
            (t_vec
              (digit))))
        (typed_arg
          (identifier)
          (alge_type
            (t_scalar)))
        (csg_binary
          (identifier)
          (csg_prim
            (identifier)
            (alge_expr
              (identifier)))
          (csg_prim
            (identifier)
            (alge_expr
              (identifier))))))

==================
tree_with_param_const
==================

field test_field(a: vec3, b: s){
    smooth_union(1.0){
        sphere(b)
    }{
        box(a)
    }
}

---

(source_file
      (field_decl
        (identifier)
        (typed_arg
          (identifier)
          (alge_type
            (t_vec
              (digit))))
        (typed_arg
          (identifier)
          (alge_type
            (t_scalar)))
        (csg_binary
          (identifier)
          (alge_expr
            (float_literal
              (digit)
              (digit)))
          (csg_prim
            (identifier)
            (alge_expr
              (identifier)))
          (csg_prim
            (identifier)
            (alge_expr
              (identifier))))))

==================
tree with small algebraic
==================

field testfield(a: vec3, b: s){
    union(){
        sphere(b + 3)
    }{
        box(a)
    }
}

---

(source_file
      (field_decl
        (identifier)
        (typed_arg
          (identifier)
          (alge_type
            (t_vec
              (digit))))
        (typed_arg
          (identifier)
          (alge_type
            (t_scalar)))
        (csg_binary
          (identifier)
          (csg_prim
            (identifier)
            (alge_expr
              (binary_expr
                (alge_expr
                  (identifier))
                (alge_expr
                  (integer_literal
                    (digit))))))
          (csg_prim
            (identifier)
            (alge_expr
              (identifier))))))

==================
tree with const
==================

field testfield(a: vec3, b: s){
    union(){
        sphere(b)
    }{
        box(vec3(3.0, 1.0, 4.0))
    }
}

---

(source_file
      (field_decl
        (identifier)
        (typed_arg
          (identifier)
          (alge_type
            (t_vec
              (digit))))
        (typed_arg
          (identifier)
          (alge_type
            (t_scalar)))
        (csg_binary
          (identifier)
          (csg_prim
            (identifier)
            (alge_expr
              (identifier)))
          (csg_prim
            (identifier)
            (alge_expr
              (alge_type_constructor
                (alge_type
                  (t_vec
                    (digit)))
                (alge_expr
                  (float_literal
                    (digit)
                    (digit)))
                (alge_expr
                  (float_literal
                    (digit)
                    (digit)))
                (alge_expr
                  (float_literal
                    (digit)
                    (digit)))))))))

==================
tree unary
==================

field testfield(b: s){
    translate(){
        sphere(b)
    }
}

---
(source_file
      (field_decl
        (identifier)
        (typed_arg
          (identifier)
          (alge_type
            (t_scalar)))
        (csg_unary
          (identifier)
          (csg_prim
            (identifier)
            (alge_expr
              (identifier))))))

==================
tree unary with param
==================

field testfield(b: s){
    translate(b){
        sphere(b)
    }
}

---

(source_file
      (field_decl
        (identifier)
        (typed_arg
          (identifier)
          (alge_type
            (t_scalar)))
        (csg_unary
          (identifier)
          (alge_expr
            (identifier))
          (csg_prim
            (identifier)
            (alge_expr
              (identifier))))))
