==================
simple_tree
==================

export testfield(a: vec3, b: s){
    csg tree = union(){
        sphere(b)
    }{
        box(a)
    };

    tree.SDF3D(a)
}

---
(source_file
      (field_export
        (identifier)
        (typed_arg
          (identifier)
          (alge_type
            (t_vec
              (digit))))
        (typed_arg
          (identifier)
          (alge_type
            (t_scalar)))
        (csg_binding
          (identifier)
          (csg_binary
            (identifier)
            (fn_call
              (identifier)
              (alge_expr
                (identifier)))
            (fn_call
              (identifier)
              (alge_expr
                (identifier)))))
        (access_decl
          (identifier)
          (fn_call
            (identifier)
            (alge_expr
              (identifier))))))

==================
tree_with_param_const
==================

export test_field(a: vec3, b: s){
    csg tree = smooth_union(1.0){
        sphere(b)
    }{
        box(a)
    };

    tree.SDF3D(a)
}

---

(source_file
      (field_export
        (identifier)
        (typed_arg
          (identifier)
          (alge_type
            (t_vec
              (digit))))
        (typed_arg
          (identifier)
          (alge_type
            (t_scalar)))
        (csg_binding
          (identifier)
          (csg_binary
            (identifier)
            (alge_expr
              (float_literal
                (digit)
                (digit)))
            (fn_call
              (identifier)
              (alge_expr
                (identifier)))
            (fn_call
              (identifier)
              (alge_expr
                (identifier)))))
        (access_decl
          (identifier)
          (fn_call
            (identifier)
            (alge_expr
              (identifier))))))

==================
tree with small algebraic
==================

export testfield(a: vec3, b: s){
    csg tree = union(){
        sphere(b + 3)
    }{
        box(a)
    };

    tree.SDF3D(a)
}

---

(source_file
      (field_export
        (identifier)
        (typed_arg
          (identifier)
          (alge_type
            (t_vec
              (digit))))
        (typed_arg
          (identifier)
          (alge_type
            (t_scalar)))
        (csg_binding
          (identifier)
          (csg_binary
            (identifier)
            (fn_call
              (identifier)
              (alge_expr
                (binary_expr
                  (alge_expr
                    (identifier))
                  (alge_expr
                    (integer_literal
                      (digit))))))
            (fn_call
              (identifier)
              (alge_expr
                (identifier)))))
        (access_decl
          (identifier)
          (fn_call
            (identifier)
            (alge_expr
              (identifier))))))

==================
tree with const
==================

export testfield(a: vec3, b: s){
    csg tree = union(){
        sphere(b)
    }{
        box([3.0, 1.0, 4.0])
    };

    tree.SDF3D(a)
}

---
(source_file
      (field_export
        (identifier)
        (typed_arg
          (identifier)
          (alge_type
            (t_vec
              (digit))))
        (typed_arg
          (identifier)
          (alge_type
            (t_scalar)))
        (csg_binding
          (identifier)
          (csg_binary
            (identifier)
            (fn_call
              (identifier)
              (alge_expr
                (identifier)))
            (fn_call
              (identifier)
              (alge_expr
                (list
                  (alge_expr
                    (float_literal
                      (digit)
                      (digit)))
                  (alge_expr
                    (float_literal
                      (digit)
                      (digit)))
                  (alge_expr
                    (float_literal
                      (digit)
                      (digit))))))))
        (access_decl
          (identifier)
          (fn_call
            (identifier)
            (alge_expr
              (identifier))))))

==================
tree unary
==================

export testfield(b: s){
    csg tree = translate(){
        sphere(b)
    };

    tree.SDF3D([1.0, 1.0, 1.0])
}

---
(source_file
      (field_export
        (identifier)
        (typed_arg
          (identifier)
          (alge_type
            (t_scalar)))
        (csg_binding
          (identifier)
          (csg_unary
            (identifier)
            (fn_call
              (identifier)
              (alge_expr
                (identifier)))))
        (access_decl
          (identifier)
          (fn_call
            (identifier)
            (alge_expr
              (list
                (alge_expr
                  (float_literal
                    (digit)
                    (digit)))
                (alge_expr
                  (float_literal
                    (digit)
                    (digit)))
                (alge_expr
                  (float_literal
                    (digit)
                    (digit)))))))))
==================
tree unary with param
==================

export testfield(b: s){
    csg tree = translate(b){
        sphere(b)
    };

    tree.SDF3D([1.0, 1.0, 1.0])
}

---

 (source_file
      (field_export
        (identifier)
        (typed_arg
          (identifier)
          (alge_type
            (t_scalar)))
        (csg_binding
          (identifier)
          (csg_unary
            (identifier)
            (alge_expr
              (identifier))
            (fn_call
              (identifier)
              (alge_expr
                (identifier)))))
        (access_decl
          (identifier)
          (fn_call
            (identifier)
            (alge_expr
              (list
                (alge_expr
                  (float_literal
                    (digit)
                    (digit)))
                (alge_expr
                  (float_literal
                    (digit)
                    (digit)))
                (alge_expr
                  (float_literal
                    (digit)
                    (digit)))))))))

==================
tree multi nest
==================

export testfield(b: s){
    csg tree = union(){
        translate([1.0, b, 3.0]){
            sphere(1.0)
        }
    }{
        smooth_union(1.0){
            sphere(b)
        }{
            box([1.0, 0.4, 1.0])
        }
    };

    tree.SDF3D([1.0, 1.0, 1.0])
}

---
(source_file
      (field_export
        (identifier)
        (typed_arg
          (identifier)
          (alge_type
            (t_scalar)))
        (csg_binding
          (identifier)
          (csg_binary
            (identifier)
            (csg_unary
              (identifier)
              (alge_expr
                (list
                  (alge_expr
                    (float_literal
                      (digit)
                      (digit)))
                  (alge_expr
                    (identifier))
                  (alge_expr
                    (float_literal
                      (digit)
                      (digit)))))
              (fn_call
                (identifier)
                (alge_expr
                  (float_literal
                    (digit)
                    (digit)))))
            (csg_binary
              (identifier)
              (alge_expr
                (float_literal
                  (digit)
                  (digit)))
              (fn_call
                (identifier)
                (alge_expr
                  (identifier)))
              (fn_call
                (identifier)
                (alge_expr
                  (list
                    (alge_expr
                      (float_literal
                        (digit)
                        (digit)))
                    (alge_expr
                      (float_literal
                        (digit)
                        (digit)))
                    (alge_expr
                      (float_literal
                        (digit)
                        (digit)))))))))
        (access_decl
          (identifier)
          (fn_call
            (identifier)
            (alge_expr
              (list
                (alge_expr
                  (float_literal
                    (digit)
                    (digit)))
                (alge_expr
                  (float_literal
                    (digit)
                    (digit)))
                (alge_expr
                  (float_literal
                    (digit)
                    (digit)))))))))
