

entity Sphere(rad: s);
concept Sdf: vec3 -> s;

impl Sphere for Sdf(at){
    length(at) - rad
}

operation MyAdOp();

impl MyAdOp<sub> for Sdf(at){
    let sd = eval sub.Sdf(at);

    diff(sd, at.x)
}

export mysdf(at: vec3){
    csg sphere = MyAdOp(){Sphere(1.0)};
    eval sphere.Sdf(at)
}
