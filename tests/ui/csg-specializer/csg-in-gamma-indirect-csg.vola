//BEGIN-CONFIG
//EXEC-FN:myfield
//EXEC-ARGS:0.0,0.0,0.0
//EXEC-EPS:0.1
//EXEC-RES:-1
//END-CONFIG
//

module super::std;


fn myswitcher(is: bool) -> csg{
    if is{
        Union(){
            Sphere(1.0)
        }{
            Box([1.0; 3])
        }
    }else{
        Union(){
            Sphere(1.0)
        }{
            Sphere(1.0)
        }
    }
}

operation Switcher(myswitch: bool);
impl Switcher<sub> for SDF3D(at){
    csg newsub = myswitcher(myswitch);

    eval newsub.SDF3D(at)
}


export fn myfield(at: vec3) -> real{
    csg t = Switcher(true){
        Translate([1.0, 0.0, 0.0]){
            Sphere(2.0)
        }
    };

    eval t.SDF3D(at)
}
