//BEGIN-CONFIG
//EXEC-FN:myfield
//EXEC-ARGS:0.0,0.0,0.0
//EXEC-EPS:0.1
//EXEC-RES:-1
//END-CONFIG
//This should be possible, since binding sub to always _the next_ ensures progress on the DAG.
//In this case we build the minimum of a twice-translated sphere, and the not-translated sphere

module std;


operation HyperOp();
impl HyperOp<sub> for SDF3D(at){
    csg t = Translate([1.0; 3]){
        sub
    };

    let dist = eval t.SDF3D(at - [-1.0, 0.0, 0.0]);
    let sdist = eval sub.SDF3D(at);

    min(dist, sdist)
}


export fn myfield(at: vec3) -> real{
    csg t = HyperOp(){
        HyperOp(){
            Sphere(1.0)
        }
    };

    eval t.SDF3D(at)
}
