//BEGIN-CONFIG
//EXEC-FN:myfield
//EXEC-ARGS:0.0,0.0,0.0
//EXEC-EPS:0.1
//EXEC-RES:-1
//END-CONFIG
//

module super::std;

operation Switcher(myswitch: bool);
impl Switcher<sub> for SDF3D(at){

    let t = 0.0;
    csg r = sub;
    for i in 0..8{
        t = t + 10.0;
        r = Union(){
            r
        }{
            Translate([t, 0.0, 0.0]){
                sub
            }
        };
    }
    eval r.SDF3D(at)
}


export fn myfield(at: vec3) -> real{
    csg t = Switcher(true){
        Translate([1.0, 0.0, 0.0]){
            Sphere(2.0)
        }
    };

    eval t.SDF3D(at)
}
