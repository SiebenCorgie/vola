module std;

//Copy from gaziya5 aka gaz in https://jbaker.graphics/writings/DEC.html

entity Fractal();
impl Fractal for SDF3D(at){
    let p = at;
    let off = 1.0;
    for i in 0..10{
        let modded = mod(p - [1.0, 1.0, 1.0], [2.0, 2.0, 2.0]) - [1.0, 1.0, 1.0];
        p = [modded.x, modded.y, modded.z];
        p = p * (1.4 / dot(modded, modded));
    }

    length([p.x, p.z] / [off; 2]) * 0.25
}


export fn myFn(at: vec3) -> real{
	csg t = Fractal();
	eval t.SDF3D(at)
}
