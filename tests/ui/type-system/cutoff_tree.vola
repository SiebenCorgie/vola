//BEGIN-CONFIG
//EXEC-FN:myField
//EXEC-ARGS:0.0,0.0,4.0
//EXEC-EPS:0.1
//EXEC-RES:-0.7556544,0.0,0.0,1.0
//END-CONFIG

module std;

impl Box for Color(at){
	[0.0, 1.0, 0.0]
}

impl SmoothUnion<a, b> for Color(at){
	let l = eval a.Color(at);
    //just use the left color, so we can predict
	l
}


//This is the cuttoff node. It will not evaluate the sub tree,
//but always return _blue_.
impl Translate<sub> for Color(at){
	[0.0, 0.0, 1.0]
}

export fn myField(at: vec3) -> (real, vec3){
	csg t = SmoothUnion(1.0){
		Translate([0.0, 1.0, 0.0]){
			Sphere(1.0)
		}
	}{
		Box([1.0, 1.0, 1.0])
	};
    //NOTE: the color is just the Translate's color, since this cuts
    //      of the subtree (the sphere).
	(eval t.SDF3D(at), eval t.Color(at))
}
