//BEGIN-CONFIG
//ERROR:Matrix-Vector multiplication expects the Matrix's "width" to be equal to Vector's "width". Matrix width = 4 & vector_width = 3<!!>Type derive failed: Result is of type "scalar<Real>", but result was untyped.
//END-CONFIG

module std;

export fn myField(at: vec3) -> real{
	let t = [
		[1.0, 0.0, 0.0],
		[0.0, 1.0, 0.0],
		[0.0, 0.0, 1.0],
		[0.0, 0.0, 0.0]
	];

	let a = t * at;

	csg r = SmoothUnion(1.0){
		Translate(a){
			Sphere(1.0)
		}
	}{
		Box([1.0, 1.0, 1.0])
	};

	eval r.SDF3D(at)
}
