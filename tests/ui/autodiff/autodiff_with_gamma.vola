module std;

operation MyAdOp();

entity MySwitch(t: real);

impl MySwitch for SDF3D(at){
    if t < 0.0{
        //sphere
        length(at) - 1.0
    }else{
        //plane
        dot(at, [0.0, -1.0, 0.0])
    }
}

impl MyAdOp<sub> for SDF3D(at){
    let sd = eval sub.SDF3D(at);
    length(diff(sd, at))
}

export fn mysdf(at: vec3) -> real{
    csg sphere = MyAdOp(){MySwitch(at.x)};
    eval sphere.SDF3D(at)
}
