//BEGIN-CONFIG
//EXEC-FN:mysdf
//EXEC-ARGS:0.0,2.0,0.0
//EXEC-EPS:0.01
//EXEC-RES:0.0
//END-CONFIG

entity Sphere(rad: real);
concept Sdf: vec3 -> real;

impl Sphere for Sdf(at){
    length(at) - rad
}

operation MyAdOp();

impl MyAdOp<sub> for Sdf(at){
    let sd = eval sub.Sdf(at);
    length([diff(sd, at.x); 3])
}

export fn mysdf(at: vec3) -> real{
    csg sphere = MyAdOp(){Sphere(1.0)};
    eval sphere.Sdf(at)
}
